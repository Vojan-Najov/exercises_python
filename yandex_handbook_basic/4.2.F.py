# Кофейня
# Ограничение времени
# 1 с
# Ограничение памяти
# 64.0 Мб
# Ввод
# стандартный ввод
# Вывод
# стандартный вывод
# Руководство местной кофейни для программистов под названием Java-0x00 решило
# модернизировать систему заказа кофе.
# Для этого им требуется реализовать функцию order, которая принимает список
# предпочтений посетителя в порядке «убывания желания».
# Согласно положению, каждый напиток в кофейне строго определён рецептом:
#     Эспрессо готовится из: 1 порции кофейных зерен.
#     Капучино готовится из: 1 порции кофейных зерен и 3 порций молока.
#     Макиато готовится из: 2 порций кофейных зерен и 1 порции молока.
#     Кофе по-венски готовится из: 1 порции кофейных зерен и 2 порций взбитых
#                                  сливок.
#     Латте Макиато готовится из: 1 порции кофейных зерен, 2 порций молока и
#                                 1 порции взбитых сливок.
#     Кон Панна готовится из: 1 порции кофейных зерен и 1 порции взбитых сливок.
# В глобальной переменной in_stock содержится словарь, описывающий ингредиенты
# в наличии. Ключи словаря: coffee, cream, milk.
# Функция должна вернуть:
#     название напитка, который будет приготовлен;
#     сообщение «К сожалению, не можем предложить Вам напиток», если ни одно из
#               предпочтений не может быть приготовлено.
# Если заказ, может быть совершён, количество доступных ингредиентов должно
# соответствующим образом уменьшиться.
# Примечание
# В решении не должно быть вызовов требуемых функций.
# Пример 1
# Ввод
# in_stock = {"coffee": 1, "milk": 2, "cream": 3}
# print(order("Эспрессо", "Капучино", "Макиато", "Кофе по-венски",
#             "Латте Макиато", "Кон Панна"))
# print(order("Эспрессо", "Капучино", "Макиато", "Кофе по-венски",
#             "Латте Макиато", "Кон Панна"))
# Вывод
# Эспрессо
# К сожалению, не можем предложить Вам напиток
# Пример 2
# Ввод
# in_stock = {"coffee": 4, "milk": 4, "cream": 0}
# print(order("Капучино", "Макиато", "Эспрессо"))
# print(order("Капучино", "Макиато", "Эспрессо"))
# print(order("Капучино", "Макиато", "Эспрессо"))
# Вывод
# Капучино
# Макиато
# Эспрессо

def order(*preferences):
    global in_stock
    recepts = {
            'Эспрессо': {'coffee': 1},
            'Капучино': {'coffee': 1, 'milk': 3},
            'Макиато': {'coffee': 2, 'milk': 1},
            'Кофе по-венски': {'coffee': 1, 'cream': 2},
            'Латте Макиато': {'coffee': 1, 'milk': 2, 'cream': 1},
            'Кон Панна': {'coffee': 1, 'cream': 1}
    }

    found = False
    for preference in preferences:
        recept = recepts[preference]
        for k, v in recept.items():
            if in_stock.get(k, 0) < v:
                break
        else:
            for k, v in recept.items():
                in_stock[k] -= v
            found = True
            break

    return preference if found else 'К сожалению, не можем предложить Вам напиток'

if __name__ == '__main__':
    in_stock = {"coffee": 1, "milk": 2, "cream": 3}
    print(order("Эспрессо", "Капучино", "Макиато", "Кофе по-венски",
                 "Латте Макиато", "Кон Панна"))
    print(order("Эспрессо", "Капучино", "Макиато", "Кофе по-венски",
                 "Латте Макиато", "Кон Панна"))

    print()
    in_stock = {"coffee": 4, "milk": 4, "cream": 0}
    print(order("Капучино", "Макиато", "Эспрессо"))
    print(order("Капучино", "Макиато", "Эспрессо"))
    print(order("Капучино", "Макиато", "Эспрессо"))

