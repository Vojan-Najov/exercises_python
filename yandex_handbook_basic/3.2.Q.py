# Друзья друзей
# Теория шести рукопожатий — социологическая теория, согласно которой любые
# два человека на Земле разделены не более, чем пятью уровнями общих знакомых
# (и, соответственно, шестью уровнями связей). Формальная математическая
# формулировка теории: диаметр графа знакомств не превышает 6. Мы не станем
# так сильно углубляться в дружественные связи и пока нам хватит только двух
# уровней. Напишите программу, которая по списку дружественных пар для каждого
# человека определяет список «друзей 2-го уровня».
# Формат ввода
# В каждой строке записывается два имени.
# Окончанием ввода служит пустая строка.
# Формат вывода
# Выведите список всех людей и их «друзей 2-го уровня» в формате
# «Человек: Друг1, Друг2, ...».
# Список людей и друзей в каждой строке требуется вывести в алфавитном порядке
# без повторений.
# Пример 1
# Ввод
# Иванов Петров
# Иванов Сергеев
# Васильев Петров
# Сергеев Яковлев
# Петров Кириллов
# Петров Яковлев
# Вывод
# Васильев: Иванов, Кириллов, Яковлев
# Иванов: Васильев, Кириллов, Яковлев
# Кириллов: Васильев, Иванов, Яковлев
# Петров: Сергеев
# Сергеев: Петров
# Яковлев: Васильев, Иванов, Кириллов
# Пример 2
# Ввод
# Николай Фёдор
# Николай Женя
# Фёдор Женя
# Фёдор Илья
# Илья Фёдор
# Вывод
# Женя: Илья
# Илья: Женя, Николай
# Николай: Илья
# Фёдор: 
# Ограничение памяти
# 64.0 Мб
# Ограничение времени
# 1 с
# Ввод
# стандартный ввод или input.txt
# Вывод
# стандартный вывод или output.txt

friends = {}
while s := input():
    name1, name2 = s.split()
    friends.setdefault(name1, set()).add(name2)
    friends.setdefault(name2, set()).add(name1)


for name in sorted(friends.keys()):
    second_friends = set()
    for friend in friends[name]:
        for second_friend in friends[friend]:
            if second_friend not in friends[name] | {name}:
                second_friends.add(second_friend)
    print(f"{name}: {', '.join(sorted(second_friends))}")


    
