# Экстремум функции
# Ограничение времени
# 1 с
# Ограничение памяти
# 64.0 Мб
# Ввод
# стандартный ввод
# Вывод
# стандартный вывод
# Экстремум в математике — максимальное или минимальное значение функции на
# заданном множестве.
# Чаще всего математики для поиска экстремума функции прибегают к её
# дифференцированию. Однако мы можем обойти этот трудоёмкий процесс и схитрить.
# Напишите три функции:
#     values(func, start, end, step), строящую Series значений функции в
#                                     точках диапазона и принимающую:
#         функцию одной переменной;
#         начало диапазона;
#         конец диапазона;
#         шаг вычисления;
#     min_extremum(data) возвращает точку, в которой был достигнут минимум на
#                        диапазоне;
#     max_extremum(data) возвращает точку, в который был достигнут максимум на
#                        диапазоне.
# Примечание
# Ваше решение должно содержать только функции.
# В решении не должно быть вызовов требуемых функций.
# Пример
# Ввод
# data = values(lambda x: x ** 2 + 2 * x + 1, -1.5, 1.7, 0.1)
# print(data)
# print(min_extremum(data))
# print(max_extremum(data))
# Вывод
# -1.500000e+00    0.25
# -1.400000e+00    0.16
# -1.300000e+00    0.09
# -1.200000e+00    0.04
# -1.100000e+00    0.01
# -1.000000e+00    0.00
# -9.000000e-01    0.01
# -8.000000e-01    0.04
# -7.000000e-01    0.09
# -6.000000e-01    0.16
# -5.000000e-01    0.25
# -4.000000e-01    0.36
# -3.000000e-01    0.49
# -2.000000e-01    0.64
# -1.000000e-01    0.81
#  1.332268e-15    1.00
#  1.000000e-01    1.21
#  2.000000e-01    1.44
#  3.000000e-01    1.69
#  4.000000e-01    1.96
#  5.000000e-01    2.25
#  6.000000e-01    2.56
#  7.000000e-01    2.89
#  8.000000e-01    3.24
#  9.000000e-01    3.61
#  1.000000e+00    4.00
#  1.100000e+00    4.41
#  1.200000e+00    4.84
#  1.300000e+00    5.29
#  1.400000e+00    5.76
#  1.500000e+00    6.25
#  1.600000e+00    6.76
#  1.700000e+00    7.29
# dtype: float64
# -0.9999999999999996
# 1.7000000000000028

import pandas as pd
import numpy as np


def values(func, start, end, step):
    array = np.arange(start, end + step, step)
    return pd.Series((func(x) for x in array), array)


def min_extremum(data):
    return data[data == data.min()].index[0]


def max_extremum(data):
    return data[data == data.max()].index[0]


def main():
    data = values(lambda x: x ** 2 + 2 * x + 1, -1.5, 1.7, 0.1)
    print(data)
    print(min_extremum(data))
    print(max_extremum(data))


if __name__ == '__main__':
    main()
