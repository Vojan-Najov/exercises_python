# Ломать — не строить 2
# Ограничение времени
# 1 с
# Ограничение памяти
# 64.0 Мб
# Ввод
# стандартный ввод
# Вывод
# стандартный вывод
# Вашему решению будет предоставлена функция func, которая на этот раз
# принимает неограниченное число позиционных параметров и производит с ними
# некую операцию приведения типа.
# Предложите вызов функции, который гарантированно породит ошибку внутри функции.
# Примечание
# Если ошибка произойдёт внутри функции, то она будет перехвачена и обработана.
# Если же она произойдет в вашем коде, то программа будет завершена с ошибкой.
# Пример 1
# Ввод
# def func(a, b, c):
#     return ''.join(map(str, (a, b, c)))
# Вывод
# Ура! Ошибка!
# Пример 2
# Ввод
# def func(a, b):
#     return set(a) ^ set(b)
# Вывод
# Ура! Ошибка!

class Tmp():
    def __init__(self):
        pass

    def __str__(self):
        raise Exception()

    def __repr__(self):
        raise Exception()

def func(a, b, c):
    return ''.join(map(str, (a, b, c)))

try:
    func(func, Tmp())
except Exception:
    print('Ура! Ошибка!')

def func(a, b, c):
    return ''.join(map(str, (a, b, c)))

try:
    func(func)
except Exception:
    print('Ура! Ошибка!')
