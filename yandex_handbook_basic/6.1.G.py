# Шахматная подготовка
# Ограничение времени
# 1 с
# Ограничение памяти
# 64.0 Мб
# Ввод
# стандартный ввод
# Вывод
# стандартный вывод
# Представьте, что вы пишете компьютерную игру «Шахматы». Вам надо смоделировать
# шахматную доску, которая представляет собой матрицу. Чёрная клетка
# представляется нулём, а белая — единицей. Если смотреть на доску сверху, то
# левая верхняя клетка — белая.
# Напишите функцию make_board, которая принимает размер шахматной доски, и
# возвращает матрицу, моделирующую заданную доску.
# Установите тип элементов матрицы int8.
# Примечание
# Ваше решение должно содержать только функции.
# В решении не должно быть вызовов требуемых функций.
# Пример 1
# Ввод
# print(make_board(4))
# Вывод
# [[1 0 1 0]
#  [0 1 0 1]
#  [1 0 1 0]
#  [0 1 0 1]]
# Пример 2
# Ввод
# print(make_board(6))
# Вывод
# [[1 0 1 0 1 0]
#  [0 1 0 1 0 1]
#  [1 0 1 0 1 0]
#  [0 1 0 1 0 1]
#  [1 0 1 0 1 0]
#  [0 1 0 1 0 1]]

import numpy as np


def make_board(n):
    gen = (((j + 1) % 2 + i % 2) % 2 for i in range(n) for j in range(n))
    return np.array(list(gen), dtype='int8').reshape(n, n)


def main():
    print(make_board(4))
    print(make_board(5))
    print(make_board(6))


if __name__ == '__main__':
    main()
